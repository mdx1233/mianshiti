class Solution:
    def printMatrix(self, matrix):
        if not matrix or len(matrix) <= 0 or len(matrix[0]) <= 0:
            return
        start = 0
        rows = len(matrix)
        columns = len(matrix[0])
        res = []
        while (rows > 2*start and columns > 2*start):
            self.printMatrixInCircle(matrix, rows, columns, start, res)
            start += 1
        return res

    def printMatrixInCircle(self, matrix, rows, columns, start, res):
        endX = columns - start - 1
        endY = rows - start - 1
        for i in range(start, endX + 1):
            res.append(matrix[start][i])
        if endY > start:
            for i in range(start + 1, endY + 1):
                res.append(matrix[i][endX])
        if endX > start:
            for i in range(endX - 1, start - 1, -1):
                res.append(matrix[endY][i])
        if endY - 1 > start and endX > start:
            for i in range(endY - 1, start, -1):
                res.append(matrix[i][start])

if __name__ == '__main__':
    M = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]
    print(Solution().printMatrix(M))

